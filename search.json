[{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Version 3, 29 June 2007Copyright © 2007 Free Software Foundation, Inc. <http://fsf.org/> Everyone permitted copy distribute verbatim copies license document, changing allowed. version GNU Lesser General Public License incorporates terms conditions version 3 GNU General Public License, supplemented additional permissions listed .","code":""},{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":"id_0-additional-definitions","dir":"","previous_headings":"","what":"0. Additional Definitions","title":"GNU Lesser General Public License","text":"used herein, “License” refers version 3 GNU Lesser General Public License, “GNU GPL” refers version 3 GNU General Public License. “Library” refers covered work governed License, Application Combined Work defined . “Application” work makes use interface provided Library, otherwise based Library. Defining subclass class defined Library deemed mode using interface provided Library. “Combined Work” work produced combining linking Application Library. particular version Library Combined Work made also called “Linked Version”. “Minimal Corresponding Source” Combined Work means Corresponding Source Combined Work, excluding source code portions Combined Work , considered isolation, based Application, Linked Version. “Corresponding Application Code” Combined Work means object code /source code Application, including data utility programs needed reproducing Combined Work Application, excluding System Libraries Combined Work.","code":""},{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":"id_1-exception-to-section-3-of-the-gnu-gpl","dir":"","previous_headings":"","what":"1. Exception to Section 3 of the GNU GPL","title":"GNU Lesser General Public License","text":"may convey covered work sections 3 4 License without bound section 3 GNU GPL.","code":""},{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":"id_2-conveying-modified-versions","dir":"","previous_headings":"","what":"2. Conveying Modified Versions","title":"GNU Lesser General Public License","text":"modify copy Library, , modifications, facility refers function data supplied Application uses facility (argument passed facility invoked), may convey copy modified version: ) License, provided make good faith effort ensure , event Application supply function data, facility still operates, performs whatever part purpose remains meaningful, b) GNU GPL, none additional permissions License applicable copy.","code":""},{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":"id_3-object-code-incorporating-material-from-library-header-files","dir":"","previous_headings":"","what":"3. Object Code Incorporating Material from Library Header Files","title":"GNU Lesser General Public License","text":"object code form Application may incorporate material header file part Library. may convey object code terms choice, provided , incorporated material limited numerical parameters, data structure layouts accessors, small macros, inline functions templates (ten fewer lines length), following: ) Give prominent notice copy object code Library used Library use covered License. b) Accompany object code copy GNU GPL license document.","code":""},{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":"id_4-combined-works","dir":"","previous_headings":"","what":"4. Combined Works","title":"GNU Lesser General Public License","text":"may convey Combined Work terms choice , taken together, effectively restrict modification portions Library contained Combined Work reverse engineering debugging modifications, also following: ) Give prominent notice copy Combined Work Library used Library use covered License. b) Accompany Combined Work copy GNU GPL license document. c) Combined Work displays copyright notices execution, include copyright notice Library among notices, well reference directing user copies GNU GPL license document. d) one following: 0) Convey Minimal Corresponding Source terms License, Corresponding Application Code form suitable , terms permit, user recombine relink Application modified version Linked Version produce modified Combined Work, manner specified section 6 GNU GPL conveying Corresponding Source. 1) Use suitable shared library mechanism linking Library. suitable mechanism one () uses run time copy Library already present user’s computer system, (b) operate properly modified version Library interface-compatible Linked Version. e) Provide Installation Information, otherwise required provide information section 6 GNU GPL, extent information necessary install execute modified version Combined Work produced recombining relinking Application modified version Linked Version. (use option 4d0, Installation Information must accompany Minimal Corresponding Source Corresponding Application Code. use option 4d1, must provide Installation Information manner specified section 6 GNU GPL conveying Corresponding Source.)","code":""},{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":"id_5-combined-libraries","dir":"","previous_headings":"","what":"5. Combined Libraries","title":"GNU Lesser General Public License","text":"may place library facilities work based Library side side single library together library facilities Applications covered License, convey combined library terms choice, following: ) Accompany combined library copy work based Library, uncombined library facilities, conveyed terms License. b) Give prominent notice combined library part work based Library, explaining find accompanying uncombined form work.","code":""},{"path":"https://koda86.github.io/FunBootBand/LICENSE.html","id":"id_6-revised-versions-of-the-gnu-lesser-general-public-license","dir":"","previous_headings":"","what":"6. Revised Versions of the GNU Lesser General Public License","title":"GNU Lesser General Public License","text":"Free Software Foundation may publish revised /new versions GNU Lesser General Public License time time. new versions similar spirit present version, may differ detail address new problems concerns. version given distinguishing version number. Library received specifies certain numbered version GNU Lesser General Public License “later version” applies , option following terms conditions either published version later version published Free Software Foundation. Library received specify version number GNU Lesser General Public License, may choose version GNU Lesser General Public License ever published Free Software Foundation. Library received specifies proxy can decide whether future versions GNU Lesser General Public License shall apply, proxy’s public statement acceptance version permanent authorization choose version Library.","code":""},{"path":"https://koda86.github.io/FunBootBand/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Daniel Koska. Maintainer.","code":""},{"path":"https://koda86.github.io/FunBootBand/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Koska D (2023). FunBootBand: Creates Functional Bootstraped (statistical) Bands. R package version 0.1.0, https://koda86.github.io/FunBootBand/.","code":"@Manual{,   title = {FunBootBand: Creates Functional Bootstraped (statistical) Bands},   author = {Daniel Koska},   year = {2023},   note = {R package version 0.1.0},   url = {https://koda86.github.io/FunBootBand/}, }"},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"funbootband","dir":"","previous_headings":"","what":"Creates Functional Bootstraped (statistical) Bands","title":"Creates Functional Bootstraped (statistical) Bands","text":"FunBootBand package contains one function band(), generates statistical (prediction confidence) bands time series curve data using functional approach bootstrapping.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"acknowledgments","dir":"","previous_headings":"","what":"Acknowledgments","title":"Creates Functional Bootstraped (statistical) Bands","text":"core, package implementation method developed Sutherland et al. (1988) Olshen et al. (1989), described detail Lenhoff et al. (1999). method originally written MATLAB program Doris Oriwol later translated R extended approach handle nested/hierarchical data (see also https://github.com/koda86/floa). theoretical background, see publication: Koska, D., Oriwol, D., & Maiwald, C. (2023). Comparison statistical models characterizing continuous differences two biomechanical measurement systems. Journal Biomechanics 149, https://doi.org/10.1016/j.jbiomech.2023.111506.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Creates Functional Bootstraped (statistical) Bands","text":"can install development version FunBootBand GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"koda86/FunBootBand\")"},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"Creates Functional Bootstraped (statistical) Bands","text":"package comes built-data set (named data) dimension [101, 110], meaning 110 curves arranged columns length 101 (column represents curve). data set structured way. ’s use band() function built-data set (iid case). may, .e., print calculated limits alongside original curves.","code":"library(FunBootBand)  # In the example, the number of bootstrap iterations `B` is set to only 5 to guarantee a fast calculation. # In reality, this value would be too low (package default: 400). prediction.band <- band(data,                         type = \"prediction\",                         B = 5,                         alpha = 0.05,                         iid = TRUE)  # Function output: rownames(prediction.band) #> [1] \"upper\" \"mean\"  \"lower\" str(prediction.band) #>  num [1:3, 1:101] 0.849 0.188 -0.472 0.892 0.232 ... #>  - attr(*, \"dimnames\")=List of 2 #>   ..$ : chr [1:3] \"upper\" \"mean\" \"lower\" #>   ..$ : NULL plot(data[, 1], type = \"l\", ylim = c(-3, 3), ylab = \"Amplitude\") apply(data, 2, function(x) lines(x)) apply(prediction.band, 1, function(x) lines(x, col = \"red\", lwd = 4))"},{"path":[]},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"type","dir":"","previous_headings":"Function arguments","what":"type","title":"Creates Functional Bootstraped (statistical) Bands","text":"Setting type “prediction” “confidence” generate respective statistical bands.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"alpha","dir":"","previous_headings":"Function arguments","what":"alpha","title":"Creates Functional Bootstraped (statistical) Bands","text":"constructing prediction intervals, significance level alpha affect band width. Lower values alpha result wider bands.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"iid","dir":"","previous_headings":"Function arguments","what":"iid","title":"Creates Functional Bootstraped (statistical) Bands","text":"many empirical data sets, curves built-data set data hierarchical structure, means curves arranged clusters. clusters may e.g. represent subjects, within several curves nested. header data specifies cluster structure assigning curves cluster letter. function argument iid, independent identically distributed, specifies cluster structure accounted (iid=FALSE), curves treated independent (iid=TRUE). iid=TRUE case, header required. function arguments, please see function description Function Arguments. self-explanatory.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"kcoef","dir":"","previous_headings":"Function arguments","what":"k.coef","title":"Creates Functional Bootstraped (statistical) Bands","text":"applied functional approach, curves approximated using Fourier series. k.coef sets number Fourier coefficients depends smoothness curves. default value 50 rather high smooth curves may reduced. , however, accompanied sort (graphical) plausibility check. curves rough, curves generated non-stationary process, functional approach may fail altogether.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"b","dir":"","previous_headings":"Function arguments","what":"B","title":"Creates Functional Bootstraped (statistical) Bands","text":"distribution curves thus band width estimated using bootstrap procedure. Larger values typically provide better estimates, take longer compute. band width likely converge certain value. Therefore, different values B may tested investigate convergence behavior. default, B set 400.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Creates Functional Bootstraped (statistical) Bands","text":"Please cite package via citation(\"FunBootBand\").","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"issues-and-contributing","dir":"","previous_headings":"","what":"Issues and contributing","title":"Creates Functional Bootstraped (statistical) Bands","text":"case find bug run problems, please look “Issues” tab. Feedback kind welcome.","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"licence","dir":"","previous_headings":"","what":"Licence","title":"Creates Functional Bootstraped (statistical) Bands","text":"LGPL (>= 3)","code":""},{"path":"https://koda86.github.io/FunBootBand/index.html","id":"references","dir":"","previous_headings":"","what":"References","title":"Creates Functional Bootstraped (statistical) Bands","text":"Lenhoff, M.W., Santner, T.J., Otis, J.C., Peterson, M.G., Williams, B.J., Backus, S.., 1999. Bootstrap prediction confidence bands: superior statistical method analysis gait data. Gait Posture 9 (1), 10–17. http://dx.doi.org/10.1016/s0966- 6362(98)00043-5. Olshen, R.., Biden, E.N., Wyatt, M.P., Sutherland, D.H., 1989. Gait analysis bootstrap. Ann. Statist. 17 (4), http://dx.doi.org/10.1214/aos/1176347372. Sutherland, D., Olshen, R., Biden, E., Wyatt, M., 1988. Development Mature Walking. Mac Keith Press.","code":""},{"path":"https://koda86.github.io/FunBootBand/reference/band.html","id":null,"dir":"Reference","previous_headings":"","what":"FunBootBand — band","title":"FunBootBand — band","text":"Creates Functional Bootstraped (statistical) Bands. 'band' function rests two basic ASSUMPTIONS: - Assumption 1 (A1): curves equal length. necessary, interpolation must performed externally. - Assumption 2 (A2): Curves originate stationary processes. assumptions met, function return error (A1) result potentially erroneous outputs (A2).","code":""},{"path":"https://koda86.github.io/FunBootBand/reference/band.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"FunBootBand — band","text":"","code":"band(data, type, alpha, iid = TRUE, k.coef = 50, B = 400)"},{"path":"https://koda86.github.io/FunBootBand/reference/band.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"FunBootBand — band","text":"data data frame dimensions [t, n], 'n' number curves 't' length curves. curves need equal length. type Type statistical band (c(\"confidence\", \"prediction\")). alpha Desired type error probability. iid Dependency curves (iid = c(TRUE, FALSE)). Setting iid=TRUE runs ordinary (naive) bootstrap, curves assumed independent. setting iid=FALSE, two-stage bootstrap run, curve clusters (comprising curves) resampled replacement initial stage, one curve per cluster sampled without replacement second stage. iid set FALSE, curves assumed nested curve clusters. cluster structure needs specified colnames data frame using letters indicate clusters (see 'Format'). k.coef Number Fourier coefficients (e.g., k = 50). Determines smoothness curve approximation. B Number bootstrap iterations (e.g., B = 1000). Default 400.","code":""},{"path":"https://koda86.github.io/FunBootBand/reference/band.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"FunBootBand — band","text":"data frame object contains upper lower band boundaries, alongside mean curve.","code":""},{"path":"https://koda86.github.io/FunBootBand/reference/band.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"FunBootBand — band","text":"Daniel Koska","code":""},{"path":"https://koda86.github.io/FunBootBand/reference/band.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"FunBootBand — band","text":"","code":"library(FunBootBand) band.limits <- band(data, type = \"prediction\", alpha = 0.05, iid = TRUE, B = 50) plot(band.limits[1,], # upper band limit      xlim = c(0, 101),      ylim = range(band.limits),      type = \"l\") lines(band.limits[2, ]) # mean curve lines(band.limits[3, ]) # lower band limit"},{"path":"https://koda86.github.io/FunBootBand/reference/data.html","id":null,"dir":"Reference","previous_headings":"","what":"Example data set containing time series (aka curve) data — data","title":"Example data set containing time series (aka curve) data — data","text":"data set consists 110 curves (.e, time series). data set hierarchical structure: contains 10 curves 11  subjects. curves equal length (n = 101 curve points).","code":""},{"path":"https://koda86.github.io/FunBootBand/reference/data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Example data set containing time series (aka curve) data — data","text":"","code":"data(data)"},{"path":"https://koda86.github.io/FunBootBand/reference/data.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Example data set containing time series (aka curve) data — data","text":"data frame consisting 11 rows 110 columns. row represents subject, column curve point.","code":""}]
